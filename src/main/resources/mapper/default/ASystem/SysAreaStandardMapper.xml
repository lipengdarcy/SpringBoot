<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smarthse.business.dao.system.SysAreaStandardMapper">
  <resultMap id="BaseResultMap" type="cn.smarthse.business.model.system.SysAreaStandard">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="postCode" jdbcType="CHAR" property="postcode" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mark_name" jdbcType="VARCHAR" property="markName" />
    <result column="py" jdbcType="VARCHAR" property="py" />
    <result column="py_full" jdbcType="VARCHAR" property="pyFull" />
    <result column="lng" jdbcType="VARCHAR" property="lng" />
    <result column="lat" jdbcType="VARCHAR" property="lat" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="province_id" jdbcType="BIGINT" property="provinceId" />
    <result column="province_name" jdbcType="VARCHAR" property="provinceName" />
    <result column="city_id" jdbcType="BIGINT" property="cityId" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="area_id" jdbcType="BIGINT" property="areaId" />
    <result column="area_name" jdbcType="VARCHAR" property="areaName" />
    <result column="street_id" jdbcType="BIGINT" property="streetId" />
    <result column="street_name" jdbcType="VARCHAR" property="streetName" />
    <result column="is_valid" jdbcType="BIT" property="isValid" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, pid, postCode, short_name, name, mark_name, py, py_full, lng, lat, level, sort, 
    province_id, province_name, city_id, city_name, area_id, area_name, street_id, street_name, 
    is_valid, create_by, create_date, update_by, update_date
  </sql>
  <select id="selectByExample" parameterType="cn.smarthse.business.model.system.SysAreaStandardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_area_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_area_standard
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_area_standard
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.smarthse.business.model.system.SysAreaStandardExample">
    delete from sys_area_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.smarthse.business.model.system.SysAreaStandard">
    insert into sys_area_standard (ID, pid, postCode, 
      short_name, name, mark_name, 
      py, py_full, lng, lat, 
      level, sort, province_id, 
      province_name, city_id, city_name, 
      area_id, area_name, street_id, 
      street_name, is_valid, create_by, 
      create_date, update_by, update_date
      )
    values (#{id,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{postcode,jdbcType=CHAR}, 
      #{shortName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{markName,jdbcType=VARCHAR}, 
      #{py,jdbcType=VARCHAR}, #{pyFull,jdbcType=VARCHAR}, #{lng,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, 
      #{level,jdbcType=TINYINT}, #{sort,jdbcType=INTEGER}, #{provinceId,jdbcType=BIGINT}, 
      #{provinceName,jdbcType=VARCHAR}, #{cityId,jdbcType=BIGINT}, #{cityName,jdbcType=VARCHAR}, 
      #{areaId,jdbcType=BIGINT}, #{areaName,jdbcType=VARCHAR}, #{streetId,jdbcType=BIGINT}, 
      #{streetName,jdbcType=VARCHAR}, #{isValid,jdbcType=BIT}, #{createBy,jdbcType=BIGINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.smarthse.business.model.system.SysAreaStandard">
    insert into sys_area_standard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="postcode != null">
        postCode,
      </if>
      <if test="shortName != null">
        short_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="markName != null">
        mark_name,
      </if>
      <if test="py != null">
        py,
      </if>
      <if test="pyFull != null">
        py_full,
      </if>
      <if test="lng != null">
        lng,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="provinceName != null">
        province_name,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="cityName != null">
        city_name,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="areaName != null">
        area_name,
      </if>
      <if test="streetId != null">
        street_id,
      </if>
      <if test="streetName != null">
        street_name,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="postcode != null">
        #{postcode,jdbcType=CHAR},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="markName != null">
        #{markName,jdbcType=VARCHAR},
      </if>
      <if test="py != null">
        #{py,jdbcType=VARCHAR},
      </if>
      <if test="pyFull != null">
        #{pyFull,jdbcType=VARCHAR},
      </if>
      <if test="lng != null">
        #{lng,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="provinceName != null">
        #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=BIGINT},
      </if>
      <if test="cityName != null">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=BIGINT},
      </if>
      <if test="areaName != null">
        #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        #{streetId,jdbcType=BIGINT},
      </if>
      <if test="streetName != null">
        #{streetName,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.smarthse.business.model.system.SysAreaStandardExample" resultType="java.lang.Integer">
    select count(*) from sys_area_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_area_standard
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.postcode != null">
        postCode = #{record.postcode,jdbcType=CHAR},
      </if>
      <if test="record.shortName != null">
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.markName != null">
        mark_name = #{record.markName,jdbcType=VARCHAR},
      </if>
      <if test="record.py != null">
        py = #{record.py,jdbcType=VARCHAR},
      </if>
      <if test="record.pyFull != null">
        py_full = #{record.pyFull,jdbcType=VARCHAR},
      </if>
      <if test="record.lng != null">
        lng = #{record.lng,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null">
        lat = #{record.lat,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.provinceId != null">
        province_id = #{record.provinceId,jdbcType=BIGINT},
      </if>
      <if test="record.provinceName != null">
        province_name = #{record.provinceName,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=BIGINT},
      </if>
      <if test="record.cityName != null">
        city_name = #{record.cityName,jdbcType=VARCHAR},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=BIGINT},
      </if>
      <if test="record.areaName != null">
        area_name = #{record.areaName,jdbcType=VARCHAR},
      </if>
      <if test="record.streetId != null">
        street_id = #{record.streetId,jdbcType=BIGINT},
      </if>
      <if test="record.streetName != null">
        street_name = #{record.streetName,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=BIT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_area_standard
    set ID = #{record.id,jdbcType=BIGINT},
      pid = #{record.pid,jdbcType=BIGINT},
      postCode = #{record.postcode,jdbcType=CHAR},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      mark_name = #{record.markName,jdbcType=VARCHAR},
      py = #{record.py,jdbcType=VARCHAR},
      py_full = #{record.pyFull,jdbcType=VARCHAR},
      lng = #{record.lng,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=TINYINT},
      sort = #{record.sort,jdbcType=INTEGER},
      province_id = #{record.provinceId,jdbcType=BIGINT},
      province_name = #{record.provinceName,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=BIGINT},
      city_name = #{record.cityName,jdbcType=VARCHAR},
      area_id = #{record.areaId,jdbcType=BIGINT},
      area_name = #{record.areaName,jdbcType=VARCHAR},
      street_id = #{record.streetId,jdbcType=BIGINT},
      street_name = #{record.streetName,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=BIT},
      create_by = #{record.createBy,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.smarthse.business.model.system.SysAreaStandard">
    update sys_area_standard
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="postcode != null">
        postCode = #{postcode,jdbcType=CHAR},
      </if>
      <if test="shortName != null">
        short_name = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="markName != null">
        mark_name = #{markName,jdbcType=VARCHAR},
      </if>
      <if test="py != null">
        py = #{py,jdbcType=VARCHAR},
      </if>
      <if test="pyFull != null">
        py_full = #{pyFull,jdbcType=VARCHAR},
      </if>
      <if test="lng != null">
        lng = #{lng,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="provinceId != null">
        province_id = #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="provinceName != null">
        province_name = #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="cityName != null">
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=BIGINT},
      </if>
      <if test="areaName != null">
        area_name = #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        street_id = #{streetId,jdbcType=BIGINT},
      </if>
      <if test="streetName != null">
        street_name = #{streetName,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.smarthse.business.model.system.SysAreaStandard">
    update sys_area_standard
    set pid = #{pid,jdbcType=BIGINT},
      postCode = #{postcode,jdbcType=CHAR},
      short_name = #{shortName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      mark_name = #{markName,jdbcType=VARCHAR},
      py = #{py,jdbcType=VARCHAR},
      py_full = #{pyFull,jdbcType=VARCHAR},
      lng = #{lng,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT},
      sort = #{sort,jdbcType=INTEGER},
      province_id = #{provinceId,jdbcType=BIGINT},
      province_name = #{provinceName,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=BIGINT},
      city_name = #{cityName,jdbcType=VARCHAR},
      area_id = #{areaId,jdbcType=BIGINT},
      area_name = #{areaName,jdbcType=VARCHAR},
      street_id = #{streetId,jdbcType=BIGINT},
      street_name = #{streetName,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=BIT},
      create_by = #{createBy,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>