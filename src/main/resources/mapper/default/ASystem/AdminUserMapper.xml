<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smarthse.business.dao.AdminUserMapper">
	<resultMap id="BaseResultMap" type="cn.smarthse.business.model.AdminUser">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="area_id" jdbcType="BIGINT" property="areaId" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="pass_word" jdbcType="VARCHAR" property="passWord" />
		<result column="salt" jdbcType="VARCHAR" property="salt" />
		<result column="real_name" jdbcType="VARCHAR" property="realName" />
		<result column="gender" jdbcType="CHAR" property="gender" />
		<result column="dept" jdbcType="VARCHAR" property="dept" />
		<result column="job_title" jdbcType="VARCHAR" property="jobTitle" />
		<result column="tel" jdbcType="VARCHAR" property="tel" />
		<result column="role" jdbcType="TINYINT" property="role" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="user_icon" jdbcType="INTEGER" property="userIcon" />
		<result column="is_valid" jdbcType="TINYINT" property="isValid" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, area_id, user_name, pass_word, salt, real_name, gender, dept,
		job_title, tel,
		role, create_time, update_time, user_icon, is_valid
	</sql>
	<select id="selectByExample" parameterType="cn.smarthse.business.model.AdminUserExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from admin_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from admin_user
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from admin_user
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="cn.smarthse.business.model.AdminUserExample">
		delete from admin_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.smarthse.business.model.AdminUser">
		insert into admin_user (ID, area_id, user_name,
		pass_word, salt, real_name,
		gender, dept, job_title,
		tel, role, create_time,
		update_time, user_icon, is_valid
		)
		values (#{id,jdbcType=INTEGER}, #{areaId,jdbcType=BIGINT},
		#{userName,jdbcType=VARCHAR},
		#{passWord,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR},
		#{gender,jdbcType=CHAR}, #{dept,jdbcType=VARCHAR},
		#{jobTitle,jdbcType=VARCHAR},
		#{tel,jdbcType=VARCHAR}, #{role,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}, #{userIcon,jdbcType=INTEGER},
		#{isValid,jdbcType=TINYINT}
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.smarthse.business.model.AdminUser">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into admin_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="areaId != null">
				area_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="passWord != null">
				pass_word,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="realName != null">
				real_name,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="dept != null">
				dept,
			</if>
			<if test="jobTitle != null">
				job_title,
			</if>
			<if test="tel != null">
				tel,
			</if>
			<if test="role != null">
				role,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="userIcon != null">
				user_icon,
			</if>
			<if test="isValid != null">
				is_valid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="areaId != null">
				#{areaId,jdbcType=BIGINT},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="passWord != null">
				#{passWord,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=CHAR},
			</if>
			<if test="dept != null">
				#{dept,jdbcType=VARCHAR},
			</if>
			<if test="jobTitle != null">
				#{jobTitle,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				#{tel,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				#{role,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userIcon != null">
				#{userIcon,jdbcType=INTEGER},
			</if>
			<if test="isValid != null">
				#{isValid,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="cn.smarthse.business.model.AdminUserExample"
		resultType="java.lang.Integer">
		select count(*) from admin_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update admin_user
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.areaId != null">
				area_id = #{record.areaId,jdbcType=BIGINT},
			</if>
			<if test="record.userName != null">
				user_name = #{record.userName,jdbcType=VARCHAR},
			</if>
			<if test="record.passWord != null">
				pass_word = #{record.passWord,jdbcType=VARCHAR},
			</if>
			<if test="record.salt != null">
				salt = #{record.salt,jdbcType=VARCHAR},
			</if>
			<if test="record.realName != null">
				real_name = #{record.realName,jdbcType=VARCHAR},
			</if>
			<if test="record.gender != null">
				gender = #{record.gender,jdbcType=CHAR},
			</if>
			<if test="record.dept != null">
				dept = #{record.dept,jdbcType=VARCHAR},
			</if>
			<if test="record.jobTitle != null">
				job_title = #{record.jobTitle,jdbcType=VARCHAR},
			</if>
			<if test="record.tel != null">
				tel = #{record.tel,jdbcType=VARCHAR},
			</if>
			<if test="record.role != null">
				role = #{record.role,jdbcType=TINYINT},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.userIcon != null">
				user_icon = #{record.userIcon,jdbcType=INTEGER},
			</if>
			<if test="record.isValid != null">
				is_valid = #{record.isValid,jdbcType=TINYINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update admin_user
		set ID = #{record.id,jdbcType=INTEGER},
		area_id = #{record.areaId,jdbcType=BIGINT},
		user_name = #{record.userName,jdbcType=VARCHAR},
		pass_word = #{record.passWord,jdbcType=VARCHAR},
		salt = #{record.salt,jdbcType=VARCHAR},
		real_name = #{record.realName,jdbcType=VARCHAR},
		gender = #{record.gender,jdbcType=CHAR},
		dept = #{record.dept,jdbcType=VARCHAR},
		job_title = #{record.jobTitle,jdbcType=VARCHAR},
		tel = #{record.tel,jdbcType=VARCHAR},
		role = #{record.role,jdbcType=TINYINT},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		update_time = #{record.updateTime,jdbcType=TIMESTAMP},
		user_icon = #{record.userIcon,jdbcType=INTEGER},
		is_valid = #{record.isValid,jdbcType=TINYINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="cn.smarthse.business.model.AdminUser">
		update admin_user
		<set>
			<if test="areaId != null">
				area_id = #{areaId,jdbcType=BIGINT},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="passWord != null">
				pass_word = #{passWord,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				real_name = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=CHAR},
			</if>
			<if test="dept != null">
				dept = #{dept,jdbcType=VARCHAR},
			</if>
			<if test="jobTitle != null">
				job_title = #{jobTitle,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				tel = #{tel,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				role = #{role,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userIcon != null">
				user_icon = #{userIcon,jdbcType=INTEGER},
			</if>
			<if test="isValid != null">
				is_valid = #{isValid,jdbcType=TINYINT},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.smarthse.business.model.AdminUser">
		update admin_user
		set area_id = #{areaId,jdbcType=BIGINT},
		user_name = #{userName,jdbcType=VARCHAR},
		pass_word = #{passWord,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR},
		real_name = #{realName,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=CHAR},
		dept = #{dept,jdbcType=VARCHAR},
		job_title = #{jobTitle,jdbcType=VARCHAR},
		tel = #{tel,jdbcType=VARCHAR},
		role = #{role,jdbcType=TINYINT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		user_icon = #{userIcon,jdbcType=INTEGER},
		is_valid = #{isValid,jdbcType=TINYINT}
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>