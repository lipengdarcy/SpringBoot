<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smarthse.core.dao.ASystem.ASyslogMapper">
  <resultMap id="BaseResultMap" type="cn.smarthse.core.model.ASystem.ASyslog">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="operateIP" jdbcType="VARCHAR" property="operateip" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="tableName" jdbcType="VARCHAR" property="tablename" />
    <result column="recordId" jdbcType="INTEGER" property="recordid" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="updator" jdbcType="INTEGER" property="updator" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.smarthse.core.model.ASystem.ASyslog">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, cid, uid, operateIP, type, tableName, recordId, description, createTime, creator, 
    updateTime, updator
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.smarthse.core.model.ASystem.ASyslogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from A_SysLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.smarthse.core.model.ASystem.ASyslogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from A_SysLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from A_SysLog
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from A_SysLog
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.smarthse.core.model.ASystem.ASyslogExample">
    delete from A_SysLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.smarthse.core.model.ASystem.ASyslog">
    insert into A_SysLog (ID, cid, uid, 
      operateIP, type, tableName, 
      recordId, description, createTime, 
      creator, updateTime, updator, 
      content)
    values (#{id,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{operateip,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{tablename,jdbcType=VARCHAR}, 
      #{recordid,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, #{updator,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true"  parameterType="cn.smarthse.core.model.ASystem.ASyslog">
    insert into A_SysLog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="operateip != null">
        operateIP,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="tablename != null">
        tableName,
      </if>
      <if test="recordid != null">
        recordId,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="updator != null">
        updator,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="operateip != null">
        #{operateip,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="tablename != null">
        #{tablename,jdbcType=VARCHAR},
      </if>
      <if test="recordid != null">
        #{recordid,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null">
        #{updator,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.smarthse.core.model.ASystem.ASyslogExample" resultType="java.lang.Integer">
    select count(*) from A_SysLog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update A_SysLog
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.operateip != null">
        operateIP = #{record.operateip,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.tablename != null">
        tableName = #{record.tablename,jdbcType=VARCHAR},
      </if>
      <if test="record.recordid != null">
        recordId = #{record.recordid,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updator != null">
        updator = #{record.updator,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update A_SysLog
    set ID = #{record.id,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      operateIP = #{record.operateip,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      tableName = #{record.tablename,jdbcType=VARCHAR},
      recordId = #{record.recordid,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      updator = #{record.updator,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update A_SysLog
    set ID = #{record.id,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      operateIP = #{record.operateip,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      tableName = #{record.tablename,jdbcType=VARCHAR},
      recordId = #{record.recordid,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      updator = #{record.updator,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.smarthse.core.model.ASystem.ASyslog">
    update A_SysLog
    <set>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="operateip != null">
        operateIP = #{operateip,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="tablename != null">
        tableName = #{tablename,jdbcType=VARCHAR},
      </if>
      <if test="recordid != null">
        recordId = #{recordid,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null">
        updator = #{updator,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.smarthse.core.model.ASystem.ASyslog">
    update A_SysLog
    set cid = #{cid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      operateIP = #{operateip,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      tableName = #{tablename,jdbcType=VARCHAR},
      recordId = #{recordid,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      updator = #{updator,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.smarthse.core.model.ASystem.ASyslog">
    update A_SysLog
    set cid = #{cid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      operateIP = #{operateip,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      tableName = #{tablename,jdbcType=VARCHAR},
      recordId = #{recordid,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      updator = #{updator,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>